@model BikeStores_MVC.Models.OrderHistoryReportVM
@{
    ViewBag.Title = "Customer Order History Report";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Index", "Reports", FormMethod.Get))
{
    <div class="row mb-3">
        <div class="col-md-4">
            <label>Select Customer:</label>
            @Html.DropDownList("customerId", (SelectList)ViewBag.CustomerId, "-- choose --",
                               new { @class = "form-select", onchange = "this.form.submit()" })
        </div>
    </div>
}

@if (Model != null)
{
    <h4>@Model.CustomerName</h4>
    <canvas id="orderChart" height="120"></canvas>

    <table class="table table-striped mt-3">
        <thead class="table-dark">
            <tr>
                <th>Order #</th>
                <th>Date</th>
                <th>Product</th>
                <th>Qty</th>
                <th>Unit Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var o in Model.Orders)
            {
                <tr>
                    <td>@o.OrderId</td>
                    <td>@o.OrderDate.ToShortDateString()</td>
                    <td>@o.Product</td>
                    <td>@o.Quantity</td>
                    <td>@o.UnitPrice.ToString("C")</td>
                    <td>@o.Total.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-4">
        <button id="savePdf" class="btn btn-success">Export to PDF</button>
    </div>
}

<hr />

<h4 class="mt-5">📁 Document Archive</h4>

<table class="table table-bordered">
    <thead class="table-secondary"><tr><th>File</th><th>Size (KB)</th><th>Date</th><th>Description</th><th>Actions</th></tr></thead>
    <tbody>
        @foreach (var f in ViewBag.Files)
        {
            string name = f.Name.ToString();
            string descFile = Server.MapPath("~/ReportArchive/" + name + ".desc.txt");
            string desc = System.IO.File.Exists(descFile) ? System.IO.File.ReadAllText(descFile) : "";
            <tr>
                <td>@name</td>
                <td>@(Math.Round((decimal)f.Length / 1024,1))</td>
                <td>@f.Date</td>
                <td>@desc</td>
                <td>
                    @Html.ActionLink("Download", "Download", new { file = name }, new { @class = "btn btn-sm btn-outline-primary" }) |
                    @Html.ActionLink("Delete", "Delete", new { file = name }, new { @class = "btn btn-sm btn-outline-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Upload (Save Report) -->
@using (Html.BeginForm("SaveReport", "Reports", FormMethod.Post, new { enctype = "multipart/form-data", @class = "mt-3" }))
{
    <div class="mb-2">
        <label>Choose File to Upload:</label>
        <input type="file" name="file" class="form-control" required />
    </div>
    <div class="mb-2">
        <label>Description:</label>
        <textarea name="description" id="descBox" rows="4" class="form-control"></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Save to Archive</button>
}

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <script>
    // --- chart ---
    const ctx=document.getElementById('orderChart');
    @*if(ctx){
        const data=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Orders
                      ?.GroupBy(o=>o.Product)
                      .Select(g=>new {Product=g.Key, Total=g.Sum(x=>x.Total)})));
        const labels=data.map(d=>d.Product);
        const totals=data.map(d=>d.Total);
        new Chart(ctx,{
            type:'bar',
            data:{labels:labels,datasets:[{label:'Sales Value',data:totals,backgroundColor:'#0d6efd'}]},
            options:{plugins:{legend:{display:false}}}
        });*@

    @if (Model != null && Model.Orders != null && Model.Orders.Any())
{
    <script>
        const ctx = document.getElementById('orderChart');
        if (ctx) {
            const data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Model.Orders.GroupBy(o => o.Product)
                .Select(g => new { Product = g.Key, Total = g.Sum(x => x.Total) })
            ));
            const labels = data.map(d => d.Product);
            const totals = data.map(d => d.Total);
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Sales Value',
                        data: totals,
                        backgroundColor: '#0d6efd'
                    }]
                },
                options: { plugins: { legend: { display: false } } }
            });
        }
    </script>
}


    // --- export PDF ---
    document.getElementById("savePdf")?.addEventListener("click",function(){
        import("jspdf").then(jsPDF=>{
            const doc=new jsPDF.jsPDF();
            doc.text("Customer Order History Report",20,20);
            doc.html(document.body,{callback:function(d){d.save("OrderHistory.pdf");}});
        });
    });

    // --- rich text box enable resize (basic) ---
    const box=document.getElementById("descBox");
    if(box){box.style.resize='both';box.style.overflow='auto';}
    </script>
}
